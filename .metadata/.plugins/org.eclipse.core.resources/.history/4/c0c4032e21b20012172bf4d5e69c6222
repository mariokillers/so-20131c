
#include "Proceso_Plataforma.h"


t_queue* queue_listos = queue_create();
t_queue* queue_florbloq = queue_create();
t_queue* queue_hongobloq = queue_create();
t_queue* queue_monedabloq = queue_create();
t_list* niveles = list_create();
t_list* planificadores = list_create();

int main (){



	return 0;
}

Elemento_personaje* personaje_crear(char* nombre) {
	Elemento_personaje* personaje = malloc(sizeof(Elemento_personaje));
	strncpy(personaje->nombre, nombre, 24);
	return personaje;
}



void* initPanif(void* Nivel){
	nivel* miNivel = (nivel*)Nivel;
	pthread_t thr;
	int error;
	if((Planificador* this_Planificador= malloc(sizeof(Planificador)))==-1){
		exit(1);
	}
	//Asigno ID="PX"
	strcpy(this_Planificador.ID, miNivel->ID);
	this_Planificador.ID[0]='P';
	//Los puertos de los planificadores son 5501 5502 5503...
	this_Planificador.PORT= miNivel->ID[1]+5500;
	list_add(Planificadores, this_Planificador)

	//TODO Nuevo THREAD.
	initServer(this_Planificador.PORT);
	//TODO


}



void initOrq(void){

	initServer("localhost",5000);


}

void orq (void){
	char estado Planificador Nivel 2

	Mensaje* miMensaje;
	t_queue* queue_mensajes = queue_create();

	while (1){
		switch (estado){
			case STANDBY:
				if(mensajes(queue_mensajes)){
					miMensaje = queue_pop(queue_mensajes);
					switch(miMensaje->type){
						case HANDSHAKE:
							//CONEXION DE NIVEL
							if (miMensaje->data[0]=='N'){
								//CREO LA INSTANCIA NIVEL, COPIO LOS PARAMETROS, Y LA AGREGO A LA LISTA
								nivel* miNivel = malloc(sizeof(nivel));
								miNivel->FD =
								strcpy(miNivel->ID, ((nivel*) miMensaje->data)->ID);
								strcpy(miNivel->IP, ((nivel*) miMensaje->data)->IP);
								miNivel->PORT= ((nivel*) miMensaje->data)->PORT;
								list_add(miNivel);
								//CREO LA INSTANCIA PLANIFICADOR CORRESPONDIENTE A ESE NIVEL

								//CREO EL THREAD, EL PARAMETRO ES EL NUMERO DE NIVEL
								pthread_create( &thr, NULL, initPlanif, (void*) miNivel);

							}


					}
				}
			break;



		}
	}
}
